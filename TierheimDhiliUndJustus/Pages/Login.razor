@page "/login"
@inject IJSRuntime js;
@inject AuthenticationStateProvider authStateProvider;
@inject NavigationManager navManager
@using TierheimDhiliUndJustus.BLL;
@using TierheimDhiliUndJustus.DAL;
@using MySqlConnector;
@using System.Drawing;
@using System.Data.SqlClient;
@using System.IO;
@using TierheimDhiliUndJustus.Authentication;
@layout EmptyLayout;


<div id="loginpage">
<PageTitle>Login</PageTitle>

<div id="Upperpart">
    @*<div id="close"><img id="close" src="/img/close.png" @onclick="Login.CloseScreen" /></div> *@
    <div id="logo"><h1>Anmelden</h1></div>
</div>

<div id="emailinput">
    <img id="email" src="/img/email2.png" />
    <a>E-Mail:</a>  
    <input type="email" name="email" @bind="evalue">   
</div>

<div id="passwordinput">
    <img id="schloss" src="/img/schloss.png" />
    <a>Passwort:</a>  
    <input type="@inputtype" name="password" @bind="pwvalue"> 
    <img id="closedeye" src="@augenart" @onclick="ShowPasswort" />
</div>

@if(fehlermeldung!="")
{
    <div id="fehlermeldung">@fehlermeldung</div>
}

<div id="anmelden"><input type="button" name="anmelden" value="Anmelden" @onclick="Einloggen"></div>


<div id="bereitsaccount">
<a>Du hast noch kein Konto?</a><a id="registrieren" href="registrieren">Registrieren</a>
</div>
</div>
@*<CascadingValue Value="@Angemeldet" Name="Angemeldet">
    <NavMenu></NavMenu>
</CascadingValue>*@


@code{
    public static bool Angemeldet { get; set; } = false;


    string pwvalue;
    string evalue;
    string augenart="/img/closedeye.png";
    string inputtype="password";
    string fehlermeldung = "";
    public static bool screenclosed = true;
    bool eingeloggt;
    Kunde eingeloggterKunde;

    public static List<Kunde> lstkunde = Kunde_DA.GetKunde();

    private async Task Einloggen()
    {

        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;


        foreach (Kunde kunde in lstkunde)
        {
            if (kunde.Email == evalue && kunde.Passwort == pwvalue)
            {
                Angemeldet = true;
                eingeloggterKunde = kunde;
                fehlermeldung = "";
                await customAuthStateProvider.UpdateAuthenticationState(new UserSession
                    {
                        Email = eingeloggterKunde.Email,
                        Rolle = eingeloggterKunde.Rolle
                    });
                LoginConfig.Angemeldet = eingeloggterKunde.ID_Kunde;
                
                navManager.NavigateTo("/");

                    break;                     
                }
                if (kunde.Email != evalue || kunde.Passwort != pwvalue)
                {
                    fehlermeldung = "Fehleingabe, versuchen Sie es nocheinmal";

                }                          
            }
            
        }
       
        public void ShowPasswort()
        {
            if (inputtype == "password")
            {
                inputtype = "text";
                augenart = "/img/openedeye.png";

            }
            else
            {
                inputtype = "password";
                augenart = "/img/closedeye.png";
            }
            
        }   
}









