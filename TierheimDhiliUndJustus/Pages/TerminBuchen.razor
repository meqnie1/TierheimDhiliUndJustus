@page "/unseretiere/tierdetail/{id}/{buchen}"
@inject NavigationManager UriHelper
@inject AuthenticationStateProvider authStateProvider;
@using TierheimDhiliUndJustus.DAL;
@using TierheimDhiliUndJustus.BLL;
@using System.Drawing;
@using System.Data.SqlClient;
@using System.IO;

@code {
    [Parameter]
    public string Buchen { get; set; }
    [Parameter]
    public string ID{ get; set; }
}
@{
    Tier CurrentTier = Tier_DA.GetOneTier(Convert.ToInt32(ID));
    string terminart = Buchen == "besichtigungbuchen" ? "Besichtigung buchen" : (Buchen == "gassigehenbuchen" ? "Gassigehen buchen" : "Adoptionstermin buchen");
    List<Termin> lst_termine = Buchen == "besichtigungbuchen" ? Termin_DA.GetTermineWithTerminart(2) : (Buchen == "gassigehenbuchen" ? Termin_DA.GetTermineWithTerminart(1) : Termin_DA.GetTermineWithTerminart(3));

    void ClickOnButtonTerminBuchen()
    {
        Termin_DA.BookATermin(currentdateid, CurrentTier.ID_Tier);
        gebucht = true;
    }
}

<head>
    <link href="css/backnav.css" rel="stylesheet" type="text/css" />
</head>

<div id="backnav">
    <a href=""><p>Startseite</p></a><p> > </p><a href="unseretiere"><p>Unsere Tiere</p></a><p> > </p><a href="unseretiere/tierdetail/@ID"><p>@CurrentTier.Tiername</p></a>
    <p> > </p><a href="unseretiere/tierdetail/@ID/@Buchen"><p>@terminart</p></a>
</div>

@if (LoginConfig.Angemeldet != 0)
{
    if(terminart == "Gassigehen buchen" && !WichtigeMethoden_BLL.IsTierHund(CurrentTier))
    {
    <div class="submitanderror">
        <h1>Sie können das Tier '@CurrentTier.Tiername' nicht zum Gassigehen buchen.</h1>
        <p>Sie möchten das Tier '@CurrentTier.Tiername' zur Besichtigung buchen? <a href="unseretiere/tierdetail/@CurrentTier.ID_Tier/besichtigungbuchen">Klicken Sie hier!</a></p>
        <h2>Oder</h2>
        <input type="button" value="Zurück zu Unsere Tiere" @onclick="@(()=>UriHelper.NavigateTo("/unseretiere"))"/>
    </div>
    }
    else if(lst_termine.Count == 0 && !gebucht)
    {
    <div class="submitanderror">
        <h1>Derzeit sind keine Termine für @terminart verfügbar!</h1>
        <p>Bitte versuchen Sie es wann anders wieder.</p>
        <input type="button" value="Zurück zu Unsere Tiere" @onclick="@(()=>UriHelper.NavigateTo("/unseretiere"))"/>
        </div>
    }
    else if(Termin_DA.GetTermineWithKundeForCertainTier(CurrentTier.ID_Tier) == 0 && terminart == "Adoptionstermin buchen")
    {
        <div class="submitanderror">
            <h1>Sie können das Tier '@CurrentTier.Tiername' noch nicht adoptieren.</h1>
            <p>Sie müssen das Tier mind. einmal besichtigt haben, bevor sie es adoptieren können.</p>
            <p>Sie möchten das Tier '@CurrentTier.Tiername' zur Besichtigung buchen? <a href="unseretiere/tierdetail/@CurrentTier.ID_Tier/besichtigungbuchen">Klicken Sie hier!</a></p>
            <h2>Oder</h2>
            <input type="button" value="Zurück zu Unsere Tiere" @onclick="@(()=>UriHelper.NavigateTo("/unseretiere"))"/>
        </div>
    }
    else{
        if (!gebucht)
        {
            <div id="termin_alles">
                <h1 id="termin_ueberschrift">@terminart</h1>

                @{srcimg = "img/tiere/" + @CurrentTier.Tiername + ".jpg";
                srcgeschlecht = WichtigeMethoden_BLL.GetGeschlechtAsPictureTag(CurrentTier.ID_Tier);}
                <div id="termin_rahmen">
                    <img id="termin_bild" src="@srcimg"/>
                    <h1>@CurrentTier.Tiername</h1>
                    <img id="termin_geschlecht" src=@srcgeschlecht />
                </div>

                <div id="termin_auswahlmenu">
                    <h2 id="auswahl_ueberschrift">Wählen Sie einen Termin aus:</h2>
                    <select name="terminauswahl_dropdown" id="terminauswahl" @onchange="eventArgs => { ChangeCurrentSelectedDate(eventArgs.Value); }">
                        @foreach(Termin item in lst_termine)
                        {
                            //wenn man gleich den ersten Termin auswählt, wurde noch kein Wert in die Variable 'currentdateid' reingespeichert, weil die Methode 
                            //'Change CurrentSelectedDate' nie aufgerufen wurde. Deswegen wird das erste Elemente der Liste immer zuerst in die currentdateid gespeichert.
                            if(lst_termine.ElementAt(0).ID_Termin == item.ID_Termin && lst_termine.Count >= 0 && currentdateid == 0)
                            {
                                currentdateid = item.ID_Termin;
                            }
                            <option value="@item.ID_Termin">@item.TerminDatum </option>
                        }
                    </select>
                    <input type="button" value="Termin bestätigen" @onclick="eventArgs => { ClickOnButtonTerminBuchen(); }"/>
                </div>
            </div>
        }
        else
        {
            selectedTermin = Termin_DA.GetTermin(currentdateid);
            <div class="submitanderror">
                <h1>Termin wurde gebucht!</h1>
                <p>Sie haben einen Termin für @CurrentTier.Tiername am @selectedTermin.TerminDatum.ToShortDateString() um @selectedTermin.TerminDatum.ToShortTimeString() gebucht.</p>
                <p>Sie möchten alle Ihre Termine sehen? <a href="accountansicht">Klicken Sie hier!</a></p>
                <h2>Oder</h2>
                <input type="button" value="Zurück zur Startseite" @onclick="@(()=>UriHelper.NavigateTo(""))"/>
            </div>
        }
    }
}
else
{
    <div class="submitanderror">
        <h1>Sie müssen sich zuerst anmelden.</h1>
        <input type="button" value="Zum Anmelden" @onclick="@(()=>UriHelper.NavigateTo("/login"))"/>
        <h2>Oder</h2>
        <p>Registrieren Sie sich kostenlos. <a href="registrieren">Klicken Sie hier!</a></p>
    </div>
}


