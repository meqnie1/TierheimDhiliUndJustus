@inject AuthenticationStateProvider authstateprovider;
@inject IJSRuntime js;
@using TierheimDhiliUndJustus.Authentication;
@using TierheimDhiliUndJustus.Pages
<ul>
    <li><a href=""><h2>Tierheim</h2><h1>Dhili & Justus</h1></a></li>
    <li><a href="unseretiere">Unsere Tiere</a></li>
    <li><a href="">Fundtiere</a></li>
    <li><a href="">Spenden</a></li>
    <li><a href="">Kontakt</a></li>
    <li><a @onclick="Abmelden" href=@link>@anmelden<img src="img/user.png"/></a></li>  
</ul>

@code{
    string link = "Login";
    static int counter = 0;
    string email = "";
    string anmelden = "Anmelden";
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState{ get; set; }
    [CascadingParameter(Name ="Angemeldet")]
    public bool Angemeldet { get; set; }


    protected override async Task OnInitializedAsync()
    {

        //if(counter == 0)
        //{
        //    var customauthstateprovider = (CustomAuthenticationStateProvider)authstateprovider;
        //    await customauthstateprovider.UpdateAuthenticationState(null);
        //    counter++;
        //}
        //else
        //{
        if(LoginConfig.Angemeldet != 0)
        {
            //var authstate = await authenticationState;
            //email = authstate.User.Identity.Name;
            //if(email != "")
            //{
            anmelden = "Abmelden";
            link = "";
            //}
        }

        //    }
    }
    private void Abmelden()
    {
        if(anmelden!="Anmelden")
        {
            anmelden = "anmelden";
            LoginConfig.Angemeldet = 0;
            link = "Login";
        }
    }

    
    
}

